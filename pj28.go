//Реализовать паттерн адаптер на любом примере
package main
import "fmt"
func lenUtf8(word string) int{
	wordRune := []rune(word)//тип rune является синонимом типа int32, диапазон значений там побольше 2^8(0 до 256)/2^32(-2147483648 до 2147483647)
	//значит в rune поместится (скорее всего в ближайшие десятки лет) все известные раскладки клавиатур
	return len(wordRune)//значит len([]rune) нам
}
func main() {
	var word string
	fmt.Scan(&word)//введем кириллицу или символы любого другого не анг алфавита, без пробелов
	fmt.Println(len(word))//len() возвращает длину []byte тк string это чтото вроде синонима []byte/uint8, русские буквы например там считаютя за 2 символа
	fmt.Println(lenUtf8(word))//воспользуемся нашим адаптером

}